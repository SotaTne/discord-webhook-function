name: CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  changes:
    name: Changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      firestore: ${{ steps.filter.outputs.firestore }}
      functions: ${{ steps.filter.outputs.functions }}
    steps:
      # ソースコードをチェックアウト
      - name: Check out repository
        uses: actions/checkout@v3

      # Firebase のどのサービスに変更が加えられたかを検出
      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            firestore:
              - 'firestore.*'
            functions:
              - 'functions/**'

  # Cloud Firestore にデプロイ
  deploy_firestore:
    name: Deploy Firestore
    needs: changes
    if: ${{ needs.changes.outputs.firestore == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 15
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Deploy to Firestore
        run: |
          npm install -g firebase-tools
          firebase deploy --only firestore --project=firebase-discord-webhook

  # Cloud Functions for Firebase にデプロイ
  deploy_functions:
    name: Deploy Functions
    needs: changes
    if: ${{ needs.changes.outputs.functions == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 15
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Set GCP REGION from firebase.json
        id: set_region
        run: echo "REGION=$(jq -r '.functions.region' firebase.json)" >> $GITHUB_ENV

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 363.0.0"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install
        working-directory: ./functions

      - name: Deploy to Functions
        run: |
          npm install -g firebase-tools
          firebase deploy --only functions --force --project=firebase-discord-webhook

      - name: Set Functions
        run: |
          HTTP_FUNCTION_NAMES=$(gcloud functions list --format=json --regions=$REGION --v2 | \
            jq -r '.[] | select(.serviceConfig.environmentVariables.FUNCTION_SIGNATURE_TYPE=="http") | .name' | \
            paste -sd, -)
          echo "HTTP_FUNCTION_NAMES=$HTTP_FUNCTION_NAMES" >> $GITHUB_ENV

      - name: Echo Functions
        run: echo $HTTP_FUNCTION_NAMES

      - name: Make Function Public
        run: |
          for FUNCTION in $HTTP_FUNCTION_NAMES; do
            echo "Making $FUNCTION public..."
            gcloud functions add-invoker-policy-binding $FUNCTION --member="allUsers" --region=$REGION
          done
